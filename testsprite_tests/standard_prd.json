{
  "meta": {
    "project": "Kafkasder Yönetim Sistemi",
    "date": "2025-10-04",
    "prepared_by": "Generated by GPT-4"
  },
  "product_overview": "Kafkasder Yönetim Sistemi is a centralized, modern web management platform designed specifically for associations and aid organizations to digitize and automate their operations. It covers modules from aid request management to comprehensive financial reporting while ensuring data security and operational efficiency.",
  "core_goals": [
    "Enhance operational efficiency through automation, targeting 80% process automation.",
    "Ensure data security with zero security breaches by implementing robust encryption, CSRF protection, and rate limiting.",
    "Achieve high user satisfaction measured by an NPS score above 50.",
    "Maintain data integrity with 99.9% accuracy.",
    "Guarantee system availability with 99.5% uptime.",
    "Comply with WCAG 2.1 AA accessibility standards for inclusive usage.",
    "Deliver high performance with page load times under 2 seconds and Lighthouse scores above 90."
  ],
  "key_features": [
    "Comprehensive Dashboard with interactive analytics, recent activities, and KPIs.",
    "Advanced Aid Management including beneficiary profiles with detailed personal, family, financial, health, and document records.",
    "Multi-stage aid application processes with bulk operations and application history tracking.",
    "Robust Donation Management supporting multiple donation types, donor profiles, campaigns, and tax document automation.",
    "Integrated Scholarship Management for student applications, profile tracking, payment follow-ups, and academic performance monitoring.",
    "Financial Management with income/expense tracking, bank reconciliation, budget planning, and forecasting.",
    "Messaging System for SMS and email campaigns with templates and delivery tracking.",
    "Task, Event, and Meeting Management to facilitate team collaboration and scheduling.",
    "Legal Case and Document Management, including lawsuit tracking and lawyer assignments.",
    "Partner and User Management with role-based access controls and activity logging.",
    "System Settings for security, notifications, backup, and recovery management.",
    "Advanced search and filtering capabilities with global scope.",
    "Notification systems with push and in-app notifications.",
    "PWA support with offline capabilities, background sync, and install prompts.",
    "Internationalization supporting Turkish and English with RTL languages and locale formatting.",
    "Accessibility compliance ensuring keyboard navigation, screen reader support, semantic HTML, and color contrast.",
    "Advanced form systems with validation, multi-step flows, dependent fields, and mobile optimization.",
    "Data export/import features supporting CSV, Excel, PDF, and image formats."
  ],
  "user_flow_summary": [
    "Users log in through a secure authentication system integrated with Appwrite backend enabling role-based and multi-level access control.",
    "Users navigate via an advanced routing and navigation system with protected routes for different roles.",
    "Administrators manage beneficiaries through detailed profiles, including adding, editing, and viewing aid history and documents.",
    "Aid applications are submitted and processed through a multi-step approval workflow, with status updates and bulk operations.",
    "Donors and campaigns are managed with donation tracking, history viewing, and reporting tools.",
    "Finance teams record and analyze income and expenses with bank transaction reconciliation and generate financial forecasts and reports.",
    "Messaging module enables sending bulk SMS and emails, selecting templates and scheduling communications.",
    "Teams coordinate tasks, events, and meetings with progress tracking and calendar integrations.",
    "Legal teams track cases, assign lawyers, manage legal documents, and receive alerts for deadlines.",
    "Users manage their profiles, roles, and permissions while system admins configure settings, backups, and notifications.",
    "The platform supports offline usage with background synchronization, network monitoring, and retry logic to ensure productivity without interruptions."
  ],
  "validation_criteria": [
    "Automatic test coverage exceeding 80%, including unit, integration, and E2E tests (Vitest and Playwright).",
    "Full successful execution of all critical user flow E2E test scenarios.",
    "Compliance with WCAG 2.1 AA accessibility standards verified through automated tools and manual testing.",
    "Completion of security audits with zero critical vulnerabilities reported.",
    "Performance benchmarks met: page load time under 2 seconds, API response times below 500ms, Lighthouse scores above 90, and Core Web Vitals in the green zone.",
    "Load testing validating 100% user support without degradation.",
    "Disaster recovery processes tested and documented.",
    "Complete user and admin documentation along with training programs delivered to stakeholders.",
    "Support system fully operational and ready for production issues handling."
  ],
  "code_summary": {
    "tech_stack": [
      "React 18.3.1",
      "TypeScript 5.9.2",
      "Vite 5.4.20",
      "TailwindCSS 4.x",
      "Appwrite 21.2.1",
      "Zustand 5.0.3",
      "React Router v6",
      "React Hook Form 7.55.0",
      "React Query (TanStack Query) 5.59.20",
      "Zod 3.25.76",
      "Radix UI",
      "Lucide React 0.487.0",
      "Motion 12.0.0",
      "Recharts 2.15.2",
      "Vitest 3.2.4",
      "Playwright 1.55.1"
    ],
    "features": [
      {
        "name": "Authentication & Authorization",
        "description": "User authentication system with Appwrite backend, JWT token management, CSRF protection, role-based access control (RBAC), and protected routes",
        "files": [
          "components/auth/LoginPage.tsx",
          "components/auth/LoginForm.tsx",
          "components/auth/ProtectedRoute.tsx",
          "components/auth/PermissionGuard.tsx",
          "components/auth/UnauthorizedPage.tsx",
          "stores/authStore.ts",
          "services/appwriteAuthService.ts",
          "services/rolesService.ts",
          "hooks/useTokenRefresh.ts",
          "hooks/useCSRFToken.ts",
          "hooks/usePermissions.ts",
          "lib/auth/authUtils.ts",
          "lib/auth/tokenManagement.ts"
        ]
      },
      {
        "name": "Dashboard & Analytics",
        "description": "Main dashboard with statistics, recent activity, quick stats, and advanced analytics with data visualization",
        "files": [
          "components/pages/DashboardPage.tsx",
          "components/QuickStats.tsx",
          "components/RecentActivity.tsx",
          "components/analytics/AdvancedAnalyticsDashboard.tsx",
          "components/analytics/AdvancedMetrics.tsx",
          "services/intelligentStatsService.ts",
          "services/safeStatsService.ts"
        ]
      },
      {
        "name": "Beneficiary Management",
        "description": "Comprehensive beneficiary (aid recipient) management system with personal info, family details, financial status, health info, aid history, and document management",
        "files": [
          "components/pages/BeneficiariesPageEnhanced.tsx",
          "components/pages/BeneficiaryDetailPageComprehensive.tsx",
          "components/beneficiary/BeneficiaryPersonalInfo.tsx",
          "components/beneficiary/BeneficiaryFamily.tsx",
          "components/beneficiary/BeneficiaryFinancial.tsx",
          "components/beneficiary/BeneficiaryHealthInfo.tsx",
          "components/beneficiary/BeneficiaryAidHistory.tsx",
          "components/beneficiary/BeneficiaryDocuments.tsx",
          "components/beneficiary/BeneficiaryHeader.tsx",
          "components/forms/BeneficiaryForm.tsx",
          "services/beneficiariesService.ts",
          "hooks/useBeneficiaries.ts"
        ]
      },
      {
        "name": "Aid Request & Application Management",
        "description": "System for managing aid applications, requests, approvals, and tracking aid distribution",
        "files": [
          "components/pages/AidApplicationsPage.tsx",
          "components/pages/AllAidListPage.tsx",
          "components/pages/AidPage.tsx",
          "components/pages/DistributionTrackingPage.tsx",
          "components/pages/CashAidTransactionsPage.tsx",
          "components/pages/InKindAidTransactionsPage.tsx",
          "components/pages/CashAidVaultPage.tsx",
          "services/aidRequestsService.ts"
        ]
      },
      {
        "name": "Donation Management",
        "description": "Donation tracking and management system with donor information, donation history, and reporting",
        "files": [
          "components/pages/DonationsPage.tsx",
          "components/kumbara/KumbaraForm.tsx",
          "components/pages/KumbaraPage.tsx",
          "services/donationsService.ts",
          "services/kumbaraService.ts",
          "hooks/useDonations.ts",
          "hooks/useKumbara.ts"
        ]
      },
      {
        "name": "Scholarship (Burs) Management",
        "description": "Scholarship program management for students including applications, student profiles, and tracking",
        "files": [
          "components/pages/BursStudentsPage.tsx",
          "components/pages/BursApplicationsPage.tsx"
        ]
      },
      {
        "name": "Finance & Income Management",
        "description": "Financial management system including income tracking, expense management, and financial reporting",
        "files": [
          "components/pages/FinanceIncomePage.tsx",
          "components/pages/BankPaymentOrdersPage.tsx"
        ]
      },
      {
        "name": "Campaign Management",
        "description": "Campaign creation and management for fundraising and awareness initiatives",
        "files": [
          "components/pages/CampaignManagementPage.tsx",
          "services/campaignsService.ts"
        ]
      },
      {
        "name": "Partner Management",
        "description": "System for managing organizational partners, donors, and collaborators",
        "files": [
          "components/pages/PartnersPage.tsx",
          "services/partnersService.ts"
        ]
      },
      {
        "name": "Bulk Messaging & Communication",
        "description": "Bulk SMS and email messaging system with internal messaging capabilities",
        "files": [
          "components/pages/BulkMessagePage.tsx",
          "components/pages/InternalMessagingPage.tsx",
          "services/emailSMSService.ts"
        ]
      },
      {
        "name": "Task & Event Management",
        "description": "Task management, event scheduling, and meeting coordination system",
        "files": [
          "components/pages/TasksPage.tsx",
          "components/pages/EventsPage.tsx",
          "components/pages/MeetingsPage.tsx"
        ]
      },
      {
        "name": "Legal Services Management",
        "description": "Legal document management, consultation tracking, lawyer assignments, and lawsuit tracking",
        "files": [
          "components/pages/LegalDocumentsPage.tsx",
          "components/pages/LegalConsultationPage.tsx",
          "components/pages/LawyerAssignmentsPage.tsx",
          "components/pages/LawsuitTrackingPage.tsx",
          "components/pages/DocumentManagementPage.tsx"
        ]
      },
      {
        "name": "Medical Services",
        "description": "Hospital referral management and medical service tracking",
        "files": [
          "components/pages/HospitalReferralPage.tsx",
          "components/pages/ServiceTrackingPage.tsx"
        ]
      },
      {
        "name": "Case Management",
        "description": "Comprehensive case management system for tracking complex cases",
        "files": ["components/pages/CaseManagementPage.tsx"]
      },
      {
        "name": "Inventory Management",
        "description": "Inventory and stock management for aid materials and resources",
        "files": ["components/pages/InventoryManagementPage.tsx"]
      },
      {
        "name": "Appointment Scheduling",
        "description": "Appointment scheduling system for consultations and services",
        "files": ["components/pages/AppointmentSchedulingPage.tsx"]
      },
      {
        "name": "User Management",
        "description": "User administration, role management, and permission control system",
        "files": [
          "components/pages/UserManagementPageReal.tsx",
          "components/pages/RoleManagementPage.tsx",
          "services/userManagementService.ts",
          "hooks/useUserManagement.ts"
        ]
      },
      {
        "name": "Profile Management",
        "description": "User profile viewing and editing functionality",
        "files": ["components/pages/ProfilePage.tsx"]
      },
      {
        "name": "System Settings",
        "description": "System configuration and settings management",
        "files": [
          "components/pages/SystemSettingsPage.tsx",
          "services/systemSettingsService.ts"
        ]
      },
      {
        "name": "Advanced Form System",
        "description": "Comprehensive form system with validation, multi-step forms, dependent fields, mobile optimization, and auto-save",
        "files": [
          "components/forms/FormProvider.tsx",
          "components/forms/FormField.tsx",
          "components/forms/FormSection.tsx",
          "components/forms/FormStepper.tsx",
          "components/forms/DependentFormField.tsx",
          "components/forms/MobileFormField.tsx",
          "components/forms/DocumentUpload.tsx",
          "components/mobile/SmartMobileForm.tsx",
          "hooks/useFormValidation.ts",
          "hooks/useMobileForm.ts",
          "hooks/useFormAutoScroll.ts",
          "lib/forms/formValidators.ts"
        ]
      },
      {
        "name": "Advanced Search & Filtering",
        "description": "Global search functionality with advanced filtering and search providers",
        "files": [
          "components/search/AdvancedSearch.tsx",
          "components/search/EnhancedSearchInput.tsx",
          "components/search/FilterPanel.tsx",
          "components/search/SearchProvider.tsx",
          "hooks/useSearch.ts"
        ]
      },
      {
        "name": "Notification System",
        "description": "Comprehensive notification system with push notifications, in-app notifications, and notification management",
        "files": [
          "components/notifications/NotificationBell.tsx",
          "components/notifications/PushNotificationManager.tsx",
          "components/notifications/NewCategoryNotification.tsx",
          "components/ToastProvider.tsx",
          "contexts/NotificationContext.tsx",
          "stores/notificationStore.ts",
          "services/notificationService.ts",
          "services/pushNotificationService.ts",
          "hooks/usePushNotifications.ts",
          "lib/enhancedNotifications.tsx"
        ]
      },
      {
        "name": "Data Export & Import",
        "description": "Data export to various formats (CSV, Excel, PDF) and import functionality",
        "files": [
          "components/data/ExportModal.tsx",
          "services/exportService.ts",
          "services/exportUtils.ts",
          "hooks/useDataExport.ts",
          "hooks/useDataImport.ts",
          "hooks/useExport.ts"
        ]
      },
      {
        "name": "OCR & Document Processing",
        "description": "Optical Character Recognition (OCR) service for document scanning and processing",
        "files": ["services/ocrService.ts"]
      },
      {
        "name": "File Storage & Management",
        "description": "File upload, storage, and management using Appwrite Storage",
        "files": ["services/fileStorageService.ts", "lib/storage/storage.ts"]
      },
      {
        "name": "Background Sync & Offline Support",
        "description": "Background synchronization and offline support for PWA functionality",
        "files": [
          "components/sync/BackgroundSyncManager.tsx",
          "components/pwa/OfflineIndicator.tsx",
          "services/backgroundSyncService.ts",
          "hooks/useBackgroundSync.ts"
        ]
      },
      {
        "name": "Network Monitoring",
        "description": "Network status monitoring, diagnostics, and error handling",
        "files": [
          "components/NetworkStatus.tsx",
          "components/NetworkErrorHandler.tsx",
          "components/pages/NetworkDiagnosticsPage.tsx",
          "components/AppwriteConnectionStatus.tsx",
          "lib/networkDiagnostics.ts",
          "hooks/useAppwriteConnection.ts"
        ]
      },
      {
        "name": "Performance Monitoring",
        "description": "Application performance monitoring, optimization, and analytics",
        "files": [
          "services/performanceMonitoringService.ts",
          "services/monitoringService.ts",
          "hooks/usePerformance.ts",
          "hooks/usePerformanceOptimization.ts",
          "hooks/useMobilePerformance.ts",
          "lib/performance/performanceMonitor.ts",
          "lib/monitoring/monitoring.ts"
        ]
      },
      {
        "name": "Error Handling & Logging",
        "description": "Comprehensive error handling, logging, and audit trail system",
        "files": [
          "components/shared/ErrorBoundary.tsx",
          "services/errorHandler.ts",
          "services/auditService.ts",
          "lib/errorHandling.ts",
          "lib/logging/logger.ts",
          "lib/logging/performanceLogger.ts"
        ]
      },
      {
        "name": "Reporting System",
        "description": "Report generation and reporting services",
        "files": ["services/reportingService.ts"]
      },
      {
        "name": "Backup & Recovery",
        "description": "Data backup and recovery system",
        "files": ["services/backupService.ts"]
      },
      {
        "name": "Smart Automation",
        "description": "Intelligent automation system for workflow optimization",
        "files": ["components/automation/SmartAutomationSystem.tsx"]
      },
      {
        "name": "Application Workflow",
        "description": "Workflow management for application processes",
        "files": ["components/pages/ApplicationWorkflowPage.tsx"]
      },
      {
        "name": "Mobile Optimization",
        "description": "Mobile-specific optimizations including responsive design, touch interactions, and mobile navigation",
        "files": [
          "components/MobileNavigation.tsx",
          "components/PullToRefresh.tsx",
          "hooks/useAdvancedMobile.ts",
          "hooks/useTouchDevice.ts",
          "hooks/useHapticFeedback.ts"
        ]
      },
      {
        "name": "UI Component Library",
        "description": "Comprehensive UI component library built with Radix UI and custom components",
        "files": [
          "components/ui/button.tsx",
          "components/ui/card.tsx",
          "components/ui/dialog.tsx",
          "components/ui/dropdown-menu.tsx",
          "components/ui/form.tsx",
          "components/ui/input.tsx",
          "components/ui/label.tsx",
          "components/ui/select.tsx",
          "components/ui/table.tsx",
          "components/ui/tabs.tsx",
          "components/ui/toast.tsx",
          "components/shared/DataTableWrapper.tsx",
          "components/shared/ResponsiveCard.tsx",
          "components/shared/StatsCard.tsx",
          "components/shared/LoadingSpinner.tsx",
          "components/shared/SkeletonLoader.tsx",
          "components/shared/EmptyState.tsx",
          "components/shared/AnimatedContainer.tsx",
          "components/pages/UIComponentsShowcase.tsx"
        ]
      },
      {
        "name": "Charts & Data Visualization",
        "description": "Data visualization components using Recharts with lazy loading",
        "files": ["components/charts/LazyCharts.tsx"]
      },
      {
        "name": "Layout System",
        "description": "Application layout components including header, sidebar, and page layout",
        "files": [
          "components/layouts/Header.tsx",
          "components/layouts/Sidebar.tsx",
          "components/layouts/PageLayout.tsx",
          "contexts/SidebarContext.tsx",
          "hooks/use-sidebar.ts"
        ]
      },
      {
        "name": "Navigation System",
        "description": "Advanced navigation system with routing, navigation management, and safe navigation",
        "files": [
          "src/routes.tsx",
          "components/app/RouterNavigationManager.tsx",
          "components/app/NavigationManager.tsx",
          "components/app/PageRenderer.tsx",
          "hooks/useSafeNavigation.ts"
        ]
      },
      {
        "name": "Lazy Loading & Code Splitting",
        "description": "Performance optimization through lazy loading and code splitting",
        "files": ["components/LazyComponents.tsx", "hooks/useLazyLoading.tsx"]
      },
      {
        "name": "Infinite Scroll & Pagination",
        "description": "Infinite scroll and pagination functionality for large data sets",
        "files": ["hooks/useInfiniteScroll.ts", "hooks/usePagination.ts"]
      },
      {
        "name": "Local Storage & User Preferences",
        "description": "Local storage management and user preferences persistence",
        "files": ["hooks/useLocalStorage.ts", "lib/secureStorage.ts"]
      },
      {
        "name": "Keyboard Shortcuts",
        "description": "Global keyboard shortcuts for power users",
        "files": ["hooks/useKeyboard.ts"]
      },
      {
        "name": "Debounce & Performance Utilities",
        "description": "Performance utilities including debounce for search and input optimization",
        "files": ["hooks/useDebounce.ts"]
      },
      {
        "name": "Relative Time Display",
        "description": "Human-readable relative time formatting",
        "files": ["hooks/useRelativeTime.ts"]
      },
      {
        "name": "Internationalization",
        "description": "Multi-language support and internationalization service",
        "files": ["services/internationalizationService.ts"]
      },
      {
        "name": "Native Features Integration",
        "description": "Integration with native device features",
        "files": ["services/nativeFeaturesService.ts"]
      },
      {
        "name": "Data Processing",
        "description": "Data processing and transformation utilities",
        "files": ["services/dataProcessor.ts"]
      },
      {
        "name": "Validation System",
        "description": "Form and data validation using Zod schemas",
        "files": ["services/validation.ts", "utils/validation.ts"]
      },
      {
        "name": "Security Middleware",
        "description": "Security middleware including rate limiting and security headers",
        "files": [
          "middleware/rateLimit.ts",
          "middleware/security.ts",
          "lib/security/csrfProtection.ts",
          "lib/security/inputSanitization.ts",
          "lib/security/rateLimiter.ts",
          "lib/security/securityHeaders.ts"
        ]
      },
      {
        "name": "UX Enhancements",
        "description": "User experience enhancements including animations and interactions",
        "files": [
          "components/ux/AnimatedTransitions.tsx",
          "components/ux/HapticFeedback.tsx",
          "components/ux/InteractionFeedback.tsx",
          "components/ux/LoadingStates.tsx"
        ]
      },
      {
        "name": "Floating Action Button",
        "description": "Floating action button for quick actions",
        "files": ["components/FloatingActionButton.tsx"]
      },
      {
        "name": "Design System",
        "description": "Design system with colors, typography, spacing, and theme management",
        "files": [
          "lib/design-system/colors.ts",
          "lib/design-system/typography.ts",
          "lib/design-system/spacing.ts",
          "lib/design-system/breakpoints.ts",
          "lib/design-system/shadows.ts",
          "lib/design-system/animations.ts"
        ]
      },
      {
        "name": "Appwrite Integration",
        "description": "Comprehensive Appwrite backend integration including database, storage, and authentication",
        "files": [
          "lib/appwrite.ts",
          "lib/database.ts",
          "lib/config.ts",
          "lib/environment.ts",
          "services/enhancedAppwriteService.ts",
          "services/appwriteUserService.ts",
          "hooks/useAppwriteData.ts"
        ]
      },
      {
        "name": "State Management",
        "description": "Global state management using Zustand stores",
        "files": [
          "stores/authStore.ts",
          "stores/notificationStore.ts",
          "stores/uiStore.ts",
          "stores/index.ts",
          "stores/safeInit.ts"
        ]
      },
      {
        "name": "Context Providers",
        "description": "React context providers for forms, notifications, and sidebar",
        "files": [
          "contexts/FormContexts.tsx",
          "contexts/NotificationContext.tsx",
          "contexts/SidebarContext.tsx"
        ]
      }
    ]
  }
}
