name: CD Pipeline

on:
  push:
    branches: [main]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Deployment environment'
        required: true
        type: choice
        options:
          - staging
          - production

jobs:
  deploy-staging:
    if: github.event_name == 'push'
    runs-on: ubuntu-latest
    environment:
      name: staging
      url: https://fra.cloud.appwrite.io/v1/functions/68e99f6c000183bafb39/dernekys-staging
      
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install & Build
        run: |
          npm ci
          npm run build
          
      - name: Deploy to Appwrite Functions Staging
        run: |
          # Install Appwrite CLI
          npm install -g appwrite-cli
          
          # Login to Appwrite
          appwrite login --project 68e99f6c000183bafb39
          
          # Deploy function for staging
          appwrite functions create \
            --functionId=dernekys-staging \
            --name="Dernek YS Staging" \
            --runtime=node-18.0 \
            --vars=ENVIRONMENT=staging \
            --vars=API_KEY=${{ secrets.APPWRITE_API_KEY }}
            
          # Deploy static files to Appwrite Storage
          appwrite storage createFile \
            --bucketId=staging-files \
            --fileId=unique() \
            --file=./dist
          
      - name: Run Smoke Tests
        run: npm run test:e2e:staging
        
  deploy-production:
    if: github.event_name == 'workflow_dispatch' && github.event.inputs.environment == 'production'
    runs-on: ubuntu-latest
    environment:
      name: production
      url: https://fra.cloud.appwrite.io/v1/functions/68e99f6c000183bafb39/dernekys-production
      
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install & Build
        run: |
          npm ci
          npm run build
          
      - name: Deploy to Appwrite Functions Production
        run: |
          # Install Appwrite CLI
          npm install -g appwrite-cli
          
          # Login to Appwrite
          appwrite login --project 68e99f6c000183bafb39
          
          # Deploy function for production
          appwrite functions create \
            --functionId=dernekys-production \
            --name="Dernek YS Production" \
            --runtime=node-18.0 \
            --vars=ENVIRONMENT=production \
            --vars=API_KEY=${{ secrets.APPWRITE_API_KEY }}
            
          # Deploy static files to Appwrite Storage
          appwrite storage createFile \
            --bucketId=production-files \
            --fileId=unique() \
            --file=./dist
            
          # Update production domain
          appwrite projects update \
            --projectId=68e99f6c000183bafb39 \
            --name="Dernek YS Production"
          
      - name: Health Check
        run: |
          # Test Appwrite function endpoint
          curl -f https://fra.cloud.appwrite.io/v1/functions/68e99f6c000183bafb39/dernekys-production/executions || exit 1
