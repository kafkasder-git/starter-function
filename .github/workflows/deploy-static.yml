name: Static Deployment Options

on:
  workflow_dispatch:
    inputs:
      deployment_type:
        description: 'Deployment Type'
        required: true
        type: choice
        options:
          - github-pages
          - s3-bucket
          - ftp-upload
          - docker-build
        default: 'github-pages'

jobs:
  deploy-github-pages:
    if: github.event.inputs.deployment_type == 'github-pages'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install & Build
        run: |
          npm ci
          npm run build
          
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist

  deploy-s3:
    if: github.event.inputs.deployment_type == 's3-bucket'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install & Build
        run: |
          npm ci
          npm run build
          
      - name: Deploy to S3
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ secrets.AWS_REGION }}
          
      - name: Upload to S3
        run: |
          aws s3 sync ./dist s3://${{ secrets.S3_BUCKET_NAME }} --delete

  deploy-ftp:
    if: github.event.inputs.deployment_type == 'ftp-upload'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install & Build
        run: |
          npm ci
          npm run build
          
      - name: Deploy via FTP
        uses: SamKirkland/FTP-Deploy-Action@v4.3.4
        with:
          server: ${{ secrets.FTP_SERVER }}
          username: ${{ secrets.FTP_USERNAME }}
          password: ${{ secrets.FTP_PASSWORD }}
          local-dir: ./dist/
          server-dir: ./

  build-docker:
    if: github.event.inputs.deployment_type == 'docker-build'
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          cache: 'npm'
          
      - name: Install & Build
        run: |
          npm ci
          npm run build
          
      - name: Build Docker Image
        run: |
          # Create simple Dockerfile for static site
          cat > Dockerfile << EOF
          FROM nginx:alpine
          COPY dist/ /usr/share/nginx/html/
          EXPOSE 80
          CMD ["nginx", "-g", "daemon off;"]
          EOF
          
          docker build -t dernekys-app .
          
      - name: Save Docker Image
        run: |
          docker save dernekys-app > dernekys-app.tar
          
      - name: Upload Docker Artifact
        uses: actions/upload-artifact@v3
        with:
          name: docker-image
          path: dernekys-app.tar
