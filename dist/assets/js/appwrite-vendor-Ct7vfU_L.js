function t(t,e,i,o){return new(i||(i=Promise))(function(e,n){function s(t){try{a(o.next(t))}catch(e){n(e)}}function r(t){try{a(o.throw(t))}catch(e){n(e)}}function a(t){var o;t.done?e(t.value):(o=t.value,o instanceof i?o:new i(function(t){t(o)})).then(s,r)}a((o=o.apply(t,[])).next())})}var e,i,o,n,s,r,a,c,d,p,u;class l{constructor(t,e,i){this.method=t,this.attribute=e,void 0!==i&&(Array.isArray(i)?this.values=i:this.values=[i])}toString(){return JSON.stringify({method:this.method,attribute:this.attribute,values:this.values})}}l.equal=(t,e)=>new l("equal",t,e).toString(),l.notEqual=(t,e)=>new l("notEqual",t,e).toString(),l.lessThan=(t,e)=>new l("lessThan",t,e).toString(),l.lessThanEqual=(t,e)=>new l("lessThanEqual",t,e).toString(),l.greaterThan=(t,e)=>new l("greaterThan",t,e).toString(),l.greaterThanEqual=(t,e)=>new l("greaterThanEqual",t,e).toString(),l.isNull=t=>new l("isNull",t).toString(),l.isNotNull=t=>new l("isNotNull",t).toString(),l.between=(t,e,i)=>new l("between",t,[e,i]).toString(),l.startsWith=(t,e)=>new l("startsWith",t,e).toString(),l.endsWith=(t,e)=>new l("endsWith",t,e).toString(),l.select=t=>new l("select",void 0,t).toString(),l.search=(t,e)=>new l("search",t,e).toString(),l.orderDesc=t=>new l("orderDesc",t).toString(),l.orderAsc=t=>new l("orderAsc",t).toString(),l.orderRandom=()=>new l("orderRandom").toString(),l.cursorAfter=t=>new l("cursorAfter",void 0,t).toString(),l.cursorBefore=t=>new l("cursorBefore",void 0,t).toString(),l.limit=t=>new l("limit",void 0,t).toString(),l.offset=t=>new l("offset",void 0,t).toString(),l.contains=(t,e)=>new l("contains",t,e).toString(),l.notContains=(t,e)=>new l("notContains",t,e).toString(),l.notSearch=(t,e)=>new l("notSearch",t,e).toString(),l.notBetween=(t,e,i)=>new l("notBetween",t,[e,i]).toString(),l.notStartsWith=(t,e)=>new l("notStartsWith",t,e).toString(),l.notEndsWith=(t,e)=>new l("notEndsWith",t,e).toString(),l.createdBefore=t=>new l("createdBefore",void 0,t).toString(),l.createdAfter=t=>new l("createdAfter",void 0,t).toString(),l.createdBetween=(t,e)=>new l("createdBetween",void 0,[t,e]).toString(),l.updatedBefore=t=>new l("updatedBefore",void 0,t).toString(),l.updatedAfter=t=>new l("updatedAfter",void 0,t).toString(),l.updatedBetween=(t,e)=>new l("updatedBetween",void 0,[t,e]).toString(),l.or=t=>new l("or",void 0,t.map(t=>JSON.parse(t))).toString(),l.and=t=>new l("and",void 0,t.map(t=>JSON.parse(t))).toString(),l.distanceEqual=(t,e,i,o=!0)=>new l("distanceEqual",t,[[e,i,o]]).toString(),l.distanceNotEqual=(t,e,i,o=!0)=>new l("distanceNotEqual",t,[[e,i,o]]).toString(),l.distanceGreaterThan=(t,e,i,o=!0)=>new l("distanceGreaterThan",t,[[e,i,o]]).toString(),l.distanceLessThan=(t,e,i,o=!0)=>new l("distanceLessThan",t,[[e,i,o]]).toString(),l.intersects=(t,e)=>new l("intersects",t,[e]).toString(),l.notIntersects=(t,e)=>new l("notIntersects",t,[e]).toString(),l.crosses=(t,e)=>new l("crosses",t,[e]).toString(),l.notCrosses=(t,e)=>new l("notCrosses",t,[e]).toString(),l.overlaps=(t,e)=>new l("overlaps",t,[e]).toString(),l.notOverlaps=(t,e)=>new l("notOverlaps",t,[e]).toString(),l.touches=(t,e)=>new l("touches",t,[e]).toString(),l.notTouches=(t,e)=>new l("notTouches",t,[e]).toString();class h extends Error{constructor(t,e=0,i="",o=""){super(t),this.name="AppwriteException",this.message=t,this.code=e,this.type=i,this.response=o}}class w{constructor(){this.config={endpoint:"https://cloud.appwrite.io/v1",endpointRealtime:"",project:"",jwt:"",locale:"",session:"",devkey:""},this.headers={"x-sdk-name":"Web","x-sdk-platform":"client","x-sdk-language":"web","x-sdk-version":"21.2.1","X-Appwrite-Response-Format":"1.8.0"},this.realtime={socket:void 0,timeout:void 0,heartbeat:void 0,url:"",channels:new Set,subscriptions:new Map,subscriptionsCounter:0,reconnect:!0,reconnectAttempts:0,lastMessage:void 0,connect:()=>{clearTimeout(this.realtime.timeout),this.realtime.timeout=null===window||void 0===window?void 0:window.setTimeout(()=>{this.realtime.createSocket()},50)},getTimeout:()=>{switch(!0){case this.realtime.reconnectAttempts<5:return 1e3;case this.realtime.reconnectAttempts<15:return 5e3;case this.realtime.reconnectAttempts<100:return 1e4;default:return 6e4}},createHeartbeat:()=>{this.realtime.heartbeat&&clearTimeout(this.realtime.heartbeat),this.realtime.heartbeat=null===window||void 0===window?void 0:window.setInterval(()=>{var t;null===(t=this.realtime.socket)||void 0===t?void 0:t.send(JSON.stringify({type:"ping"}))},2e4)},createSocket:()=>{var t,e,i;if(this.realtime.channels.size<1)return this.realtime.reconnect=!1,null===(t=this.realtime.socket)||void 0===t||t.close(),void 0;const o=new URLSearchParams;o.set("project",this.config.project),this.realtime.channels.forEach(t=>{o.append("channels[]",t)});const n=this.config.endpointRealtime+"/realtime?"+o.toString();(n!==this.realtime.url||!this.realtime.socket||(null===(e=this.realtime.socket)||void 0===e?void 0:e.readyState)>WebSocket.OPEN)&&(this.realtime.socket&&(null===(i=this.realtime.socket)||void 0===i?void 0:i.readyState)<WebSocket.CLOSING&&(this.realtime.reconnect=!1,this.realtime.socket.close()),this.realtime.url=n,this.realtime.socket=new WebSocket(n),this.realtime.socket.addEventListener("message",this.realtime.onMessage),this.realtime.socket.addEventListener("open",t=>{this.realtime.reconnectAttempts=0,this.realtime.createHeartbeat()}),this.realtime.socket.addEventListener("close",t=>{var e,i,o;if(!this.realtime.reconnect||"error"===(null===(i=null===(e=this.realtime)||void 0===e?void 0:e.lastMessage)||void 0===i?void 0:i.type)&&1008===(null===(o=this.realtime)||void 0===o?void 0:o.lastMessage.data).code)return this.realtime.reconnect=!0,void 0;const n=this.realtime.getTimeout();void 0,setTimeout(()=>{this.realtime.reconnectAttempts++,this.realtime.createSocket()},n)}))},onMessage:t=>{var e,i;try{const o=JSON.parse(t.data);switch(this.realtime.lastMessage=o,o.type){case"connected":const t=JSON.parse(null!==(e=window.localStorage.getItem("cookieFallback"))&&void 0!==e?e:"{}"),n=null==t?void 0:t[`a_session_${this.config.project}`],s=o.data;n&&!s.user&&(null===(i=this.realtime.socket)||void 0===i?void 0:i.send(JSON.stringify({type:"authentication",data:{session:n}})));break;case"event":let r=o.data;if(null==r?void 0:r.channels){if(!r.channels.some(t=>this.realtime.channels.has(t)))return;this.realtime.subscriptions.forEach(t=>{r.channels.some(e=>t.channels.includes(e))&&setTimeout(()=>t.callback(r))})}break;case"pong":default:break;case"error":throw o.data}}catch(o){void 0}},cleanUp:t=>{this.realtime.channels.forEach(e=>{t.includes(e)&&(Array.from(this.realtime.subscriptions).some(([t,i])=>i.channels.includes(e))||this.realtime.channels.delete(e))})}}}setEndpoint(t){if(!t.startsWith("http://")&&!t.startsWith("https://"))throw new h("Invalid endpoint URL: "+t);return this.config.endpoint=t,this.config.endpointRealtime=t.replace("https://","wss://").replace("http://","ws://"),this}setEndpointRealtime(t){if(!t.startsWith("ws://")&&!t.startsWith("wss://"))throw new h("Invalid realtime endpoint URL: "+t);return this.config.endpointRealtime=t,this}setProject(t){return this.headers["X-Appwrite-Project"]=t,this.config.project=t,this}setJWT(t){return this.headers["X-Appwrite-JWT"]=t,this.config.jwt=t,this}setLocale(t){return this.headers["X-Appwrite-Locale"]=t,this.config.locale=t,this}setSession(t){return this.headers["X-Appwrite-Session"]=t,this.config.session=t,this}setDevKey(t){return this.headers["X-Appwrite-Dev-Key"]=t,this.config.devkey=t,this}subscribe(t,e){let i="string"==typeof t?[t]:t;i.forEach(t=>this.realtime.channels.add(t));const o=this.realtime.subscriptionsCounter++;return this.realtime.subscriptions.set(o,{channels:i,callback:e}),this.realtime.connect(),()=>{this.realtime.subscriptions.delete(o),this.realtime.cleanUp(i),this.realtime.connect()}}prepareRequest(t,e,i={},o={}){if(t=t.toUpperCase(),i=Object.assign({},this.headers,i),"undefined"!=typeof window&&window.localStorage){const t=window.localStorage.getItem("cookieFallback");t&&(i["X-Fallback-Cookies"]=t)}let n={method:t,headers:i};if(void 0===i["X-Appwrite-Dev-Key"]&&(n.credentials="include"),"GET"===t)for(const[s,r]of Object.entries(w.flatten(o)))e.searchParams.append(s,r);else switch(i["content-type"]){case"application/json":n.body=JSON.stringify(o);break;case"multipart/form-data":const t=new FormData;for(const[e,i]of Object.entries(o))if(i instanceof File)t.append(e,i,i.name);else if(Array.isArray(i))for(const o of i)t.append(`${e}[]`,o);else t.append(e,i);n.body=t,delete i["content-type"]}return{uri:e.toString(),options:n}}chunkedUpload(e,i,o={},n={},s){var r;return t(this,0,void 0,function*(){const[t,a]=null!==(r=Object.entries(n).find(([t,e])=>e instanceof File))&&void 0!==r?r:[];if(!a||!t)throw new Error("File not found in payload");if(a.size<=w.CHUNK_SIZE)return yield this.call(e,i,o,n);let c=0,d=null;for(;c<a.size;){let r=c+w.CHUNK_SIZE;r>=a.size&&(r=a.size),o["content-range"]=`bytes ${c}-${r-1}/${a.size}`;const p=a.slice(c,r);let u=Object.assign({},n);u[t]=new File([p],a.name),d=yield this.call(e,i,o,u),s&&"function"==typeof s&&s({$id:d.$id,progress:Math.round(r/a.size*100),sizeUploaded:r,chunksTotal:Math.ceil(a.size/w.CHUNK_SIZE),chunksUploaded:Math.ceil(r/w.CHUNK_SIZE)}),d&&d.$id&&(o["x-appwrite-id"]=d.$id),c=r}return d})}ping(){return t(this,0,void 0,function*(){return this.call("GET",new URL(this.config.endpoint+"/ping"))})}call(e,i,o={},n={},s="json"){var r,a;return t(this,0,void 0,function*(){const{uri:t,options:c}=this.prepareRequest(e,i,o,n);let d=null;const p=yield fetch(t,c);if("opaque"===p.type)throw new h(`Invalid Origin. Register your new client (${window.location.host}) as a new Web platform on your project console dashboard`,403,"forbidden","");const u=p.headers.get("x-appwrite-warning");if(u&&u.split(";").forEach(t=>{}),d=(null===(r=p.headers.get("content-type"))||void 0===r?void 0:r.includes("application/json"))?yield p.json():"arrayBuffer"===s?yield p.arrayBuffer():{message:yield p.text()},400<=p.status){let t="";throw t=(null===(a=p.headers.get("content-type"))||void 0===a?void 0:a.includes("application/json"))||"arrayBuffer"===s?JSON.stringify(d):null==d?void 0:d.message,new h(null==d?void 0:d.message,p.status,null==d?void 0:d.type,t)}const l=p.headers.get("X-Fallback-Cookies");return"undefined"!=typeof window&&window.localStorage&&l&&(window.console.warn("Appwrite is using localStorage for session management. Increase your security by adding a custom domain as your API endpoint."),window.localStorage.setItem("cookieFallback",l)),d})}static flatten(t,e=""){let i={};for(const[o,n]of Object.entries(t)){let t=e?e+"["+o+"]":o;Array.isArray(n)?i=Object.assign(Object.assign({},i),w.flatten(n,t)):i[t]=n}return i}}w.CHUNK_SIZE=5242880;class f{constructor(t){this.client=t}static flatten(t,e=""){let i={};for(const[o,n]of Object.entries(t)){let t=e?e+"["+o+"]":o;Array.isArray(n)?i=Object.assign(Object.assign({},i),f.flatten(n,t)):i[t]=n}return i}}f.CHUNK_SIZE=5242880;class v{constructor(t){this.client=t}get(){const t=new URL(this.client.config.endpoint+"/account");return this.client.call("get",t,{},{})}create(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{userId:t,email:e[0],password:e[1],name:e[2]};const o=i.userId,n=i.email,s=i.password,r=i.name;if(void 0===o)throw new h('Missing required parameter: "userId"');if(void 0===n)throw new h('Missing required parameter: "email"');if(void 0===s)throw new h('Missing required parameter: "password"');const a={};void 0!==o&&(a.userId=o),void 0!==n&&(a.email=n),void 0!==s&&(a.password=s),void 0!==r&&(a.name=r);const c=new URL(this.client.config.endpoint+"/account");return this.client.call("post",c,{"content-type":"application/json"},a)}updateEmail(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{email:t,password:e[0]};const o=i.email,n=i.password;if(void 0===o)throw new h('Missing required parameter: "email"');if(void 0===n)throw new h('Missing required parameter: "password"');const s={};void 0!==o&&(s.email=o),void 0!==n&&(s.password=n);const r=new URL(this.client.config.endpoint+"/account/email");return this.client.call("patch",r,{"content-type":"application/json"},s)}listIdentities(t){let e;e=!t||t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{queries:t};const i=e.queries,o={};void 0!==i&&(o.queries=i);const n=new URL(this.client.config.endpoint+"/account/identities");return this.client.call("get",n,{},o)}deleteIdentity(t){let e;e=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{identityId:t};const i=e.identityId;if(void 0===i)throw new h('Missing required parameter: "identityId"');const o="/account/identities/{identityId}".replace("{identityId}",i),n=new URL(this.client.config.endpoint+o);return this.client.call("delete",n,{"content-type":"application/json"},{})}createJWT(){const t=new URL(this.client.config.endpoint+"/account/jwts");return this.client.call("post",t,{"content-type":"application/json"},{})}listLogs(t){let e;e=!t||t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{queries:t};const i=e.queries,o={};void 0!==i&&(o.queries=i);const n=new URL(this.client.config.endpoint+"/account/logs");return this.client.call("get",n,{},o)}updateMFA(t){let e;e=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{mfa:t};const i=e.mfa;if(void 0===i)throw new h('Missing required parameter: "mfa"');const o={};void 0!==i&&(o.mfa=i);const n=new URL(this.client.config.endpoint+"/account/mfa");return this.client.call("patch",n,{"content-type":"application/json"},o)}createMfaAuthenticator(t){let e;e=t&&"object"==typeof t&&!Array.isArray(t)&&"type"in t?t||{}:{type:t};const i=e.type;if(void 0===i)throw new h('Missing required parameter: "type"');const o="/account/mfa/authenticators/{type}".replace("{type}",i),n=new URL(this.client.config.endpoint+o);return this.client.call("post",n,{"content-type":"application/json"},{})}createMFAAuthenticator(t){let e;e=t&&"object"==typeof t&&!Array.isArray(t)&&"type"in t?t||{}:{type:t};const i=e.type;if(void 0===i)throw new h('Missing required parameter: "type"');const o="/account/mfa/authenticators/{type}".replace("{type}",i),n=new URL(this.client.config.endpoint+o);return this.client.call("post",n,{"content-type":"application/json"},{})}updateMfaAuthenticator(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)&&"type"in t?t||{}:{type:t,otp:e[0]};const o=i.type,n=i.otp;if(void 0===o)throw new h('Missing required parameter: "type"');if(void 0===n)throw new h('Missing required parameter: "otp"');const s="/account/mfa/authenticators/{type}".replace("{type}",o),r={};void 0!==n&&(r.otp=n);const a=new URL(this.client.config.endpoint+s);return this.client.call("put",a,{"content-type":"application/json"},r)}updateMFAAuthenticator(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)&&"type"in t?t||{}:{type:t,otp:e[0]};const o=i.type,n=i.otp;if(void 0===o)throw new h('Missing required parameter: "type"');if(void 0===n)throw new h('Missing required parameter: "otp"');const s="/account/mfa/authenticators/{type}".replace("{type}",o),r={};void 0!==n&&(r.otp=n);const a=new URL(this.client.config.endpoint+s);return this.client.call("put",a,{"content-type":"application/json"},r)}deleteMfaAuthenticator(t){let e;e=t&&"object"==typeof t&&!Array.isArray(t)&&"type"in t?t||{}:{type:t};const i=e.type;if(void 0===i)throw new h('Missing required parameter: "type"');const o="/account/mfa/authenticators/{type}".replace("{type}",i),n=new URL(this.client.config.endpoint+o);return this.client.call("delete",n,{"content-type":"application/json"},{})}deleteMFAAuthenticator(t){let e;e=t&&"object"==typeof t&&!Array.isArray(t)&&"type"in t?t||{}:{type:t};const i=e.type;if(void 0===i)throw new h('Missing required parameter: "type"');const o="/account/mfa/authenticators/{type}".replace("{type}",i),n=new URL(this.client.config.endpoint+o);return this.client.call("delete",n,{"content-type":"application/json"},{})}createMfaChallenge(t){let e;e=t&&"object"==typeof t&&!Array.isArray(t)&&"factor"in t?t||{}:{factor:t};const i=e.factor;if(void 0===i)throw new h('Missing required parameter: "factor"');const o={};void 0!==i&&(o.factor=i);const n=new URL(this.client.config.endpoint+"/account/mfa/challenge");return this.client.call("post",n,{"content-type":"application/json"},o)}createMFAChallenge(t){let e;e=t&&"object"==typeof t&&!Array.isArray(t)&&"factor"in t?t||{}:{factor:t};const i=e.factor;if(void 0===i)throw new h('Missing required parameter: "factor"');const o={};void 0!==i&&(o.factor=i);const n=new URL(this.client.config.endpoint+"/account/mfa/challenge");return this.client.call("post",n,{"content-type":"application/json"},o)}updateMfaChallenge(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{challengeId:t,otp:e[0]};const o=i.challengeId,n=i.otp;if(void 0===o)throw new h('Missing required parameter: "challengeId"');if(void 0===n)throw new h('Missing required parameter: "otp"');const s={};void 0!==o&&(s.challengeId=o),void 0!==n&&(s.otp=n);const r=new URL(this.client.config.endpoint+"/account/mfa/challenge");return this.client.call("put",r,{"content-type":"application/json"},s)}updateMFAChallenge(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{challengeId:t,otp:e[0]};const o=i.challengeId,n=i.otp;if(void 0===o)throw new h('Missing required parameter: "challengeId"');if(void 0===n)throw new h('Missing required parameter: "otp"');const s={};void 0!==o&&(s.challengeId=o),void 0!==n&&(s.otp=n);const r=new URL(this.client.config.endpoint+"/account/mfa/challenge");return this.client.call("put",r,{"content-type":"application/json"},s)}listMfaFactors(){const t=new URL(this.client.config.endpoint+"/account/mfa/factors");return this.client.call("get",t,{},{})}listMFAFactors(){const t=new URL(this.client.config.endpoint+"/account/mfa/factors");return this.client.call("get",t,{},{})}getMfaRecoveryCodes(){const t=new URL(this.client.config.endpoint+"/account/mfa/recovery-codes");return this.client.call("get",t,{},{})}getMFARecoveryCodes(){const t=new URL(this.client.config.endpoint+"/account/mfa/recovery-codes");return this.client.call("get",t,{},{})}createMfaRecoveryCodes(){const t=new URL(this.client.config.endpoint+"/account/mfa/recovery-codes");return this.client.call("post",t,{"content-type":"application/json"},{})}createMFARecoveryCodes(){const t=new URL(this.client.config.endpoint+"/account/mfa/recovery-codes");return this.client.call("post",t,{"content-type":"application/json"},{})}updateMfaRecoveryCodes(){const t=new URL(this.client.config.endpoint+"/account/mfa/recovery-codes");return this.client.call("patch",t,{"content-type":"application/json"},{})}updateMFARecoveryCodes(){const t=new URL(this.client.config.endpoint+"/account/mfa/recovery-codes");return this.client.call("patch",t,{"content-type":"application/json"},{})}updateName(t){let e;e=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{name:t};const i=e.name;if(void 0===i)throw new h('Missing required parameter: "name"');const o={};void 0!==i&&(o.name=i);const n=new URL(this.client.config.endpoint+"/account/name");return this.client.call("patch",n,{"content-type":"application/json"},o)}updatePassword(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{password:t,oldPassword:e[0]};const o=i.password,n=i.oldPassword;if(void 0===o)throw new h('Missing required parameter: "password"');const s={};void 0!==o&&(s.password=o),void 0!==n&&(s.oldPassword=n);const r=new URL(this.client.config.endpoint+"/account/password");return this.client.call("patch",r,{"content-type":"application/json"},s)}updatePhone(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{phone:t,password:e[0]};const o=i.phone,n=i.password;if(void 0===o)throw new h('Missing required parameter: "phone"');if(void 0===n)throw new h('Missing required parameter: "password"');const s={};void 0!==o&&(s.phone=o),void 0!==n&&(s.password=n);const r=new URL(this.client.config.endpoint+"/account/phone");return this.client.call("patch",r,{"content-type":"application/json"},s)}getPrefs(){const t=new URL(this.client.config.endpoint+"/account/prefs");return this.client.call("get",t,{},{})}updatePrefs(t){let e;e=t&&"object"==typeof t&&!Array.isArray(t)&&"prefs"in t?t||{}:{prefs:t};const i=e.prefs;if(void 0===i)throw new h('Missing required parameter: "prefs"');const o={};void 0!==i&&(o.prefs=i);const n=new URL(this.client.config.endpoint+"/account/prefs");return this.client.call("patch",n,{"content-type":"application/json"},o)}createRecovery(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{email:t,url:e[0]};const o=i.email,n=i.url;if(void 0===o)throw new h('Missing required parameter: "email"');if(void 0===n)throw new h('Missing required parameter: "url"');const s={};void 0!==o&&(s.email=o),void 0!==n&&(s.url=n);const r=new URL(this.client.config.endpoint+"/account/recovery");return this.client.call("post",r,{"content-type":"application/json"},s)}updateRecovery(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{userId:t,secret:e[0],password:e[1]};const o=i.userId,n=i.secret,s=i.password;if(void 0===o)throw new h('Missing required parameter: "userId"');if(void 0===n)throw new h('Missing required parameter: "secret"');if(void 0===s)throw new h('Missing required parameter: "password"');const r={};void 0!==o&&(r.userId=o),void 0!==n&&(r.secret=n),void 0!==s&&(r.password=s);const a=new URL(this.client.config.endpoint+"/account/recovery");return this.client.call("put",a,{"content-type":"application/json"},r)}listSessions(){const t=new URL(this.client.config.endpoint+"/account/sessions");return this.client.call("get",t,{},{})}deleteSessions(){const t=new URL(this.client.config.endpoint+"/account/sessions");return this.client.call("delete",t,{"content-type":"application/json"},{})}createAnonymousSession(){const t=new URL(this.client.config.endpoint+"/account/sessions/anonymous");return this.client.call("post",t,{"content-type":"application/json"},{})}createEmailPasswordSession(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{email:t,password:e[0]};const o=i.email,n=i.password;if(void 0===o)throw new h('Missing required parameter: "email"');if(void 0===n)throw new h('Missing required parameter: "password"');const s={};void 0!==o&&(s.email=o),void 0!==n&&(s.password=n);const r=new URL(this.client.config.endpoint+"/account/sessions/email");return this.client.call("post",r,{"content-type":"application/json"},s)}updateMagicURLSession(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{userId:t,secret:e[0]};const o=i.userId,n=i.secret;if(void 0===o)throw new h('Missing required parameter: "userId"');if(void 0===n)throw new h('Missing required parameter: "secret"');const s={};void 0!==o&&(s.userId=o),void 0!==n&&(s.secret=n);const r=new URL(this.client.config.endpoint+"/account/sessions/magic-url");return this.client.call("put",r,{"content-type":"application/json"},s)}createOAuth2Session(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)&&"provider"in t?t||{}:{provider:t,success:e[0],failure:e[1],scopes:e[2]};const o=i.provider,n=i.success,s=i.failure,r=i.scopes;if(void 0===o)throw new h('Missing required parameter: "provider"');const a="/account/sessions/oauth2/{provider}".replace("{provider}",o),c={};void 0!==n&&(c.success=n),void 0!==s&&(c.failure=s),void 0!==r&&(c.scopes=r);const d=new URL(this.client.config.endpoint+a);c.project=this.client.config.project;for(const[p,u]of Object.entries(f.flatten(c)))d.searchParams.append(p,u);return"undefined"!=typeof window&&(null===window||void 0===window?void 0:window.location)?(window.location.href=d.toString(),void 0):d.toString()}updatePhoneSession(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{userId:t,secret:e[0]};const o=i.userId,n=i.secret;if(void 0===o)throw new h('Missing required parameter: "userId"');if(void 0===n)throw new h('Missing required parameter: "secret"');const s={};void 0!==o&&(s.userId=o),void 0!==n&&(s.secret=n);const r=new URL(this.client.config.endpoint+"/account/sessions/phone");return this.client.call("put",r,{"content-type":"application/json"},s)}createSession(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{userId:t,secret:e[0]};const o=i.userId,n=i.secret;if(void 0===o)throw new h('Missing required parameter: "userId"');if(void 0===n)throw new h('Missing required parameter: "secret"');const s={};void 0!==o&&(s.userId=o),void 0!==n&&(s.secret=n);const r=new URL(this.client.config.endpoint+"/account/sessions/token");return this.client.call("post",r,{"content-type":"application/json"},s)}getSession(t){let e;e=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{sessionId:t};const i=e.sessionId;if(void 0===i)throw new h('Missing required parameter: "sessionId"');const o="/account/sessions/{sessionId}".replace("{sessionId}",i),n=new URL(this.client.config.endpoint+o);return this.client.call("get",n,{},{})}updateSession(t){let e;e=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{sessionId:t};const i=e.sessionId;if(void 0===i)throw new h('Missing required parameter: "sessionId"');const o="/account/sessions/{sessionId}".replace("{sessionId}",i),n=new URL(this.client.config.endpoint+o);return this.client.call("patch",n,{"content-type":"application/json"},{})}deleteSession(t){let e;e=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{sessionId:t};const i=e.sessionId;if(void 0===i)throw new h('Missing required parameter: "sessionId"');const o="/account/sessions/{sessionId}".replace("{sessionId}",i),n=new URL(this.client.config.endpoint+o);return this.client.call("delete",n,{"content-type":"application/json"},{})}updateStatus(){const t=new URL(this.client.config.endpoint+"/account/status");return this.client.call("patch",t,{"content-type":"application/json"},{})}createPushTarget(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{targetId:t,identifier:e[0],providerId:e[1]};const o=i.targetId,n=i.identifier,s=i.providerId;if(void 0===o)throw new h('Missing required parameter: "targetId"');if(void 0===n)throw new h('Missing required parameter: "identifier"');const r={};void 0!==o&&(r.targetId=o),void 0!==n&&(r.identifier=n),void 0!==s&&(r.providerId=s);const a=new URL(this.client.config.endpoint+"/account/targets/push");return this.client.call("post",a,{"content-type":"application/json"},r)}updatePushTarget(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{targetId:t,identifier:e[0]};const o=i.targetId,n=i.identifier;if(void 0===o)throw new h('Missing required parameter: "targetId"');if(void 0===n)throw new h('Missing required parameter: "identifier"');const s="/account/targets/{targetId}/push".replace("{targetId}",o),r={};void 0!==n&&(r.identifier=n);const a=new URL(this.client.config.endpoint+s);return this.client.call("put",a,{"content-type":"application/json"},r)}deletePushTarget(t){let e;e=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{targetId:t};const i=e.targetId;if(void 0===i)throw new h('Missing required parameter: "targetId"');const o="/account/targets/{targetId}/push".replace("{targetId}",i),n=new URL(this.client.config.endpoint+o);return this.client.call("delete",n,{"content-type":"application/json"},{})}createEmailToken(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{userId:t,email:e[0],phrase:e[1]};const o=i.userId,n=i.email,s=i.phrase;if(void 0===o)throw new h('Missing required parameter: "userId"');if(void 0===n)throw new h('Missing required parameter: "email"');const r={};void 0!==o&&(r.userId=o),void 0!==n&&(r.email=n),void 0!==s&&(r.phrase=s);const a=new URL(this.client.config.endpoint+"/account/tokens/email");return this.client.call("post",a,{"content-type":"application/json"},r)}createMagicURLToken(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{userId:t,email:e[0],url:e[1],phrase:e[2]};const o=i.userId,n=i.email,s=i.url,r=i.phrase;if(void 0===o)throw new h('Missing required parameter: "userId"');if(void 0===n)throw new h('Missing required parameter: "email"');const a={};void 0!==o&&(a.userId=o),void 0!==n&&(a.email=n),void 0!==s&&(a.url=s),void 0!==r&&(a.phrase=r);const c=new URL(this.client.config.endpoint+"/account/tokens/magic-url");return this.client.call("post",c,{"content-type":"application/json"},a)}createOAuth2Token(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)&&"provider"in t?t||{}:{provider:t,success:e[0],failure:e[1],scopes:e[2]};const o=i.provider,n=i.success,s=i.failure,r=i.scopes;if(void 0===o)throw new h('Missing required parameter: "provider"');const a="/account/tokens/oauth2/{provider}".replace("{provider}",o),c={};void 0!==n&&(c.success=n),void 0!==s&&(c.failure=s),void 0!==r&&(c.scopes=r);const d=new URL(this.client.config.endpoint+a);c.project=this.client.config.project;for(const[p,u]of Object.entries(f.flatten(c)))d.searchParams.append(p,u);return"undefined"!=typeof window&&(null===window||void 0===window?void 0:window.location)?(window.location.href=d.toString(),void 0):d.toString()}createPhoneToken(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{userId:t,phone:e[0]};const o=i.userId,n=i.phone;if(void 0===o)throw new h('Missing required parameter: "userId"');if(void 0===n)throw new h('Missing required parameter: "phone"');const s={};void 0!==o&&(s.userId=o),void 0!==n&&(s.phone=n);const r=new URL(this.client.config.endpoint+"/account/tokens/phone");return this.client.call("post",r,{"content-type":"application/json"},s)}createEmailVerification(t){let e;e=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{url:t};const i=e.url;if(void 0===i)throw new h('Missing required parameter: "url"');const o={};void 0!==i&&(o.url=i);const n=new URL(this.client.config.endpoint+"/account/verifications/email");return this.client.call("post",n,{"content-type":"application/json"},o)}createVerification(t){let e;e=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{url:t};const i=e.url;if(void 0===i)throw new h('Missing required parameter: "url"');const o={};void 0!==i&&(o.url=i);const n=new URL(this.client.config.endpoint+"/account/verifications/email");return this.client.call("post",n,{"content-type":"application/json"},o)}updateEmailVerification(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{userId:t,secret:e[0]};const o=i.userId,n=i.secret;if(void 0===o)throw new h('Missing required parameter: "userId"');if(void 0===n)throw new h('Missing required parameter: "secret"');const s={};void 0!==o&&(s.userId=o),void 0!==n&&(s.secret=n);const r=new URL(this.client.config.endpoint+"/account/verifications/email");return this.client.call("put",r,{"content-type":"application/json"},s)}updateVerification(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{userId:t,secret:e[0]};const o=i.userId,n=i.secret;if(void 0===o)throw new h('Missing required parameter: "userId"');if(void 0===n)throw new h('Missing required parameter: "secret"');const s={};void 0!==o&&(s.userId=o),void 0!==n&&(s.secret=n);const r=new URL(this.client.config.endpoint+"/account/verifications/email");return this.client.call("put",r,{"content-type":"application/json"},s)}createPhoneVerification(){const t=new URL(this.client.config.endpoint+"/account/verifications/phone");return this.client.call("post",t,{"content-type":"application/json"},{})}updatePhoneVerification(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{userId:t,secret:e[0]};const o=i.userId,n=i.secret;if(void 0===o)throw new h('Missing required parameter: "userId"');if(void 0===n)throw new h('Missing required parameter: "secret"');const s={};void 0!==o&&(s.userId=o),void 0!==n&&(s.secret=n);const r=new URL(this.client.config.endpoint+"/account/verifications/phone");return this.client.call("put",r,{"content-type":"application/json"},s)}}class m{constructor(t){this.client=t}listTransactions(t){let e;e=!t||t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{queries:t};const i=e.queries,o={};void 0!==i&&(o.queries=i);const n=new URL(this.client.config.endpoint+"/databases/transactions");return this.client.call("get",n,{},o)}createTransaction(t){let e;e=!t||t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{ttl:t};const i=e.ttl,o={};void 0!==i&&(o.ttl=i);const n=new URL(this.client.config.endpoint+"/databases/transactions");return this.client.call("post",n,{"content-type":"application/json"},o)}getTransaction(t){let e;e=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{transactionId:t};const i=e.transactionId;if(void 0===i)throw new h('Missing required parameter: "transactionId"');const o="/databases/transactions/{transactionId}".replace("{transactionId}",i),n=new URL(this.client.config.endpoint+o);return this.client.call("get",n,{},{})}updateTransaction(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{transactionId:t,commit:e[0],rollback:e[1]};const o=i.transactionId,n=i.commit,s=i.rollback;if(void 0===o)throw new h('Missing required parameter: "transactionId"');const r="/databases/transactions/{transactionId}".replace("{transactionId}",o),a={};void 0!==n&&(a.commit=n),void 0!==s&&(a.rollback=s);const c=new URL(this.client.config.endpoint+r);return this.client.call("patch",c,{"content-type":"application/json"},a)}deleteTransaction(t){let e;e=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{transactionId:t};const i=e.transactionId;if(void 0===i)throw new h('Missing required parameter: "transactionId"');const o="/databases/transactions/{transactionId}".replace("{transactionId}",i),n=new URL(this.client.config.endpoint+o);return this.client.call("delete",n,{"content-type":"application/json"},{})}createOperations(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{transactionId:t,operations:e[0]};const o=i.transactionId,n=i.operations;if(void 0===o)throw new h('Missing required parameter: "transactionId"');const s="/databases/transactions/{transactionId}/operations".replace("{transactionId}",o),r={};void 0!==n&&(r.operations=n);const a=new URL(this.client.config.endpoint+s);return this.client.call("post",a,{"content-type":"application/json"},r)}listDocuments(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{databaseId:t,collectionId:e[0],queries:e[1],transactionId:e[2]};const o=i.databaseId,n=i.collectionId,s=i.queries,r=i.transactionId;if(void 0===o)throw new h('Missing required parameter: "databaseId"');if(void 0===n)throw new h('Missing required parameter: "collectionId"');const a="/databases/{databaseId}/collections/{collectionId}/documents".replace("{databaseId}",o).replace("{collectionId}",n),c={};void 0!==s&&(c.queries=s),void 0!==r&&(c.transactionId=r);const d=new URL(this.client.config.endpoint+a);return this.client.call("get",d,{},c)}createDocument(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{databaseId:t,collectionId:e[0],documentId:e[1],data:e[2],permissions:e[3],transactionId:e[4]};const o=i.databaseId,n=i.collectionId,s=i.documentId,r=i.data,a=i.permissions,c=i.transactionId;if(void 0===o)throw new h('Missing required parameter: "databaseId"');if(void 0===n)throw new h('Missing required parameter: "collectionId"');if(void 0===s)throw new h('Missing required parameter: "documentId"');if(void 0===r)throw new h('Missing required parameter: "data"');const d="/databases/{databaseId}/collections/{collectionId}/documents".replace("{databaseId}",o).replace("{collectionId}",n),p={};void 0!==s&&(p.documentId=s),void 0!==r&&(p.data=r),void 0!==a&&(p.permissions=a),void 0!==c&&(p.transactionId=c);const u=new URL(this.client.config.endpoint+d);return this.client.call("post",u,{"content-type":"application/json"},p)}getDocument(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{databaseId:t,collectionId:e[0],documentId:e[1],queries:e[2],transactionId:e[3]};const o=i.databaseId,n=i.collectionId,s=i.documentId,r=i.queries,a=i.transactionId;if(void 0===o)throw new h('Missing required parameter: "databaseId"');if(void 0===n)throw new h('Missing required parameter: "collectionId"');if(void 0===s)throw new h('Missing required parameter: "documentId"');const c="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",o).replace("{collectionId}",n).replace("{documentId}",s),d={};void 0!==r&&(d.queries=r),void 0!==a&&(d.transactionId=a);const p=new URL(this.client.config.endpoint+c);return this.client.call("get",p,{},d)}upsertDocument(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{databaseId:t,collectionId:e[0],documentId:e[1],data:e[2],permissions:e[3],transactionId:e[4]};const o=i.databaseId,n=i.collectionId,s=i.documentId,r=i.data,a=i.permissions,c=i.transactionId;if(void 0===o)throw new h('Missing required parameter: "databaseId"');if(void 0===n)throw new h('Missing required parameter: "collectionId"');if(void 0===s)throw new h('Missing required parameter: "documentId"');if(void 0===r)throw new h('Missing required parameter: "data"');const d="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",o).replace("{collectionId}",n).replace("{documentId}",s),p={};void 0!==r&&(p.data=r),void 0!==a&&(p.permissions=a),void 0!==c&&(p.transactionId=c);const u=new URL(this.client.config.endpoint+d);return this.client.call("put",u,{"content-type":"application/json"},p)}updateDocument(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{databaseId:t,collectionId:e[0],documentId:e[1],data:e[2],permissions:e[3],transactionId:e[4]};const o=i.databaseId,n=i.collectionId,s=i.documentId,r=i.data,a=i.permissions,c=i.transactionId;if(void 0===o)throw new h('Missing required parameter: "databaseId"');if(void 0===n)throw new h('Missing required parameter: "collectionId"');if(void 0===s)throw new h('Missing required parameter: "documentId"');const d="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",o).replace("{collectionId}",n).replace("{documentId}",s),p={};void 0!==r&&(p.data=r),void 0!==a&&(p.permissions=a),void 0!==c&&(p.transactionId=c);const u=new URL(this.client.config.endpoint+d);return this.client.call("patch",u,{"content-type":"application/json"},p)}deleteDocument(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{databaseId:t,collectionId:e[0],documentId:e[1],transactionId:e[2]};const o=i.databaseId,n=i.collectionId,s=i.documentId,r=i.transactionId;if(void 0===o)throw new h('Missing required parameter: "databaseId"');if(void 0===n)throw new h('Missing required parameter: "collectionId"');if(void 0===s)throw new h('Missing required parameter: "documentId"');const a="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}".replace("{databaseId}",o).replace("{collectionId}",n).replace("{documentId}",s),c={};void 0!==r&&(c.transactionId=r);const d=new URL(this.client.config.endpoint+a);return this.client.call("delete",d,{"content-type":"application/json"},c)}decrementDocumentAttribute(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{databaseId:t,collectionId:e[0],documentId:e[1],attribute:e[2],value:e[3],min:e[4],transactionId:e[5]};const o=i.databaseId,n=i.collectionId,s=i.documentId,r=i.attribute,a=i.value,c=i.min,d=i.transactionId;if(void 0===o)throw new h('Missing required parameter: "databaseId"');if(void 0===n)throw new h('Missing required parameter: "collectionId"');if(void 0===s)throw new h('Missing required parameter: "documentId"');if(void 0===r)throw new h('Missing required parameter: "attribute"');const p="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}/{attribute}/decrement".replace("{databaseId}",o).replace("{collectionId}",n).replace("{documentId}",s).replace("{attribute}",r),u={};void 0!==a&&(u.value=a),void 0!==c&&(u.min=c),void 0!==d&&(u.transactionId=d);const l=new URL(this.client.config.endpoint+p);return this.client.call("patch",l,{"content-type":"application/json"},u)}incrementDocumentAttribute(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{databaseId:t,collectionId:e[0],documentId:e[1],attribute:e[2],value:e[3],max:e[4],transactionId:e[5]};const o=i.databaseId,n=i.collectionId,s=i.documentId,r=i.attribute,a=i.value,c=i.max,d=i.transactionId;if(void 0===o)throw new h('Missing required parameter: "databaseId"');if(void 0===n)throw new h('Missing required parameter: "collectionId"');if(void 0===s)throw new h('Missing required parameter: "documentId"');if(void 0===r)throw new h('Missing required parameter: "attribute"');const p="/databases/{databaseId}/collections/{collectionId}/documents/{documentId}/{attribute}/increment".replace("{databaseId}",o).replace("{collectionId}",n).replace("{documentId}",s).replace("{attribute}",r),u={};void 0!==a&&(u.value=a),void 0!==c&&(u.max=c),void 0!==d&&(u.transactionId=d);const l=new URL(this.client.config.endpoint+p);return this.client.call("patch",l,{"content-type":"application/json"},u)}}class y{constructor(t){this.client=t}listFiles(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{bucketId:t,queries:e[0],search:e[1]};const o=i.bucketId,n=i.queries,s=i.search;if(void 0===o)throw new h('Missing required parameter: "bucketId"');const r="/storage/buckets/{bucketId}/files".replace("{bucketId}",o),a={};void 0!==n&&(a.queries=n),void 0!==s&&(a.search=s);const c=new URL(this.client.config.endpoint+r);return this.client.call("get",c,{},a)}createFile(t,...e){let i,o;t&&"object"==typeof t&&!Array.isArray(t)?(i=t||{},o=null==t?void 0:t.onProgress):(i={bucketId:t,fileId:e[0],file:e[1],permissions:e[2]},o=e[3]);const n=i.bucketId,s=i.fileId,r=i.file,a=i.permissions;if(void 0===n)throw new h('Missing required parameter: "bucketId"');if(void 0===s)throw new h('Missing required parameter: "fileId"');if(void 0===r)throw new h('Missing required parameter: "file"');const c="/storage/buckets/{bucketId}/files".replace("{bucketId}",n),d={};void 0!==s&&(d.fileId=s),void 0!==r&&(d.file=r),void 0!==a&&(d.permissions=a);const p=new URL(this.client.config.endpoint+c);return this.client.chunkedUpload("post",p,{"content-type":"multipart/form-data"},d,o)}getFile(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{bucketId:t,fileId:e[0]};const o=i.bucketId,n=i.fileId;if(void 0===o)throw new h('Missing required parameter: "bucketId"');if(void 0===n)throw new h('Missing required parameter: "fileId"');const s="/storage/buckets/{bucketId}/files/{fileId}".replace("{bucketId}",o).replace("{fileId}",n),r=new URL(this.client.config.endpoint+s);return this.client.call("get",r,{},{})}updateFile(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{bucketId:t,fileId:e[0],name:e[1],permissions:e[2]};const o=i.bucketId,n=i.fileId,s=i.name,r=i.permissions;if(void 0===o)throw new h('Missing required parameter: "bucketId"');if(void 0===n)throw new h('Missing required parameter: "fileId"');const a="/storage/buckets/{bucketId}/files/{fileId}".replace("{bucketId}",o).replace("{fileId}",n),c={};void 0!==s&&(c.name=s),void 0!==r&&(c.permissions=r);const d=new URL(this.client.config.endpoint+a);return this.client.call("put",d,{"content-type":"application/json"},c)}deleteFile(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{bucketId:t,fileId:e[0]};const o=i.bucketId,n=i.fileId;if(void 0===o)throw new h('Missing required parameter: "bucketId"');if(void 0===n)throw new h('Missing required parameter: "fileId"');const s="/storage/buckets/{bucketId}/files/{fileId}".replace("{bucketId}",o).replace("{fileId}",n),r=new URL(this.client.config.endpoint+s);return this.client.call("delete",r,{"content-type":"application/json"},{})}getFileDownload(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{bucketId:t,fileId:e[0],token:e[1]};const o=i.bucketId,n=i.fileId,s=i.token;if(void 0===o)throw new h('Missing required parameter: "bucketId"');if(void 0===n)throw new h('Missing required parameter: "fileId"');const r="/storage/buckets/{bucketId}/files/{fileId}/download".replace("{bucketId}",o).replace("{fileId}",n),a={};void 0!==s&&(a.token=s);const c=new URL(this.client.config.endpoint+r);a.project=this.client.config.project;for(const[d,p]of Object.entries(f.flatten(a)))c.searchParams.append(d,p);return c.toString()}getFilePreview(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{bucketId:t,fileId:e[0],width:e[1],height:e[2],gravity:e[3],quality:e[4],borderWidth:e[5],borderColor:e[6],borderRadius:e[7],opacity:e[8],rotation:e[9],background:e[10],output:e[11],token:e[12]};const o=i.bucketId,n=i.fileId,s=i.width,r=i.height,a=i.gravity,c=i.quality,d=i.borderWidth,p=i.borderColor,u=i.borderRadius,l=i.opacity,w=i.rotation,v=i.background,m=i.output,y=i.token;if(void 0===o)throw new h('Missing required parameter: "bucketId"');if(void 0===n)throw new h('Missing required parameter: "fileId"');const b="/storage/buckets/{bucketId}/files/{fileId}/preview".replace("{bucketId}",o).replace("{fileId}",n),g={};void 0!==s&&(g.width=s),void 0!==r&&(g.height=r),void 0!==a&&(g.gravity=a),void 0!==c&&(g.quality=c),void 0!==d&&(g.borderWidth=d),void 0!==p&&(g.borderColor=p),void 0!==u&&(g.borderRadius=u),void 0!==l&&(g.opacity=l),void 0!==w&&(g.rotation=w),void 0!==v&&(g.background=v),void 0!==m&&(g.output=m),void 0!==y&&(g.token=y);const I=new URL(this.client.config.endpoint+b);g.project=this.client.config.project;for(const[h,j]of Object.entries(f.flatten(g)))I.searchParams.append(h,j);return I.toString()}getFileView(t,...e){let i;i=t&&"object"==typeof t&&!Array.isArray(t)?t||{}:{bucketId:t,fileId:e[0],token:e[1]};const o=i.bucketId,n=i.fileId,s=i.token;if(void 0===o)throw new h('Missing required parameter: "bucketId"');if(void 0===n)throw new h('Missing required parameter: "fileId"');const r="/storage/buckets/{bucketId}/files/{fileId}/view".replace("{bucketId}",o).replace("{fileId}",n),a={};void 0!==s&&(a.token=s);const c=new URL(this.client.config.endpoint+r);a.project=this.client.config.project;for(const[d,p]of Object.entries(f.flatten(a)))c.searchParams.append(d,p);return c.toString()}}class b{static custom(t){return t}static unique(t=7){const o=function(t,i,o,n){if("function"==typeof e?t!==e||!n:!e.has(t))throw new TypeError("Cannot read private member from an object whose class did not declare it");return n}(b,0,0,i).call(b);let n="";for(let e=0;e<t;e++)n+=Math.floor(16*Math.random()).toString(16);return o+n}}e=b,i=function(){const t=new Date,e=Math.floor(t.getTime()/1e3),i=t.getMilliseconds();return e.toString(16)+i.toString(16).padStart(5,"0")},function(t){t.Totp="totp"}(o||(o={})),function(t){t.Email="email",t.Phone="phone",t.Totp="totp",t.Recoverycode="recoverycode"}(n||(n={})),function(t){t.Amazon="amazon",t.Apple="apple",t.Auth0="auth0",t.Authentik="authentik",t.Autodesk="autodesk",t.Bitbucket="bitbucket",t.Bitly="bitly",t.Box="box",t.Dailymotion="dailymotion",t.Discord="discord",t.Disqus="disqus",t.Dropbox="dropbox",t.Etsy="etsy",t.Facebook="facebook",t.Figma="figma",t.Github="github",t.Gitlab="gitlab",t.Google="google",t.Linkedin="linkedin",t.Microsoft="microsoft",t.Notion="notion",t.Oidc="oidc",t.Okta="okta",t.Paypal="paypal",t.PaypalSandbox="paypalSandbox",t.Podio="podio",t.Salesforce="salesforce",t.Slack="slack",t.Spotify="spotify",t.Stripe="stripe",t.Tradeshift="tradeshift",t.TradeshiftBox="tradeshiftBox",t.Twitch="twitch",t.Wordpress="wordpress",t.Yahoo="yahoo",t.Yammer="yammer",t.Yandex="yandex",t.Zoho="zoho",t.Zoom="zoom",t.Mock="mock"}(s||(s={})),function(t){t.AvantBrowser="aa",t.AndroidWebViewBeta="an",t.GoogleChrome="ch",t.GoogleChromeIOS="ci",t.GoogleChromeMobile="cm",t.Chromium="cr",t.MozillaFirefox="ff",t.Safari="sf",t.MobileSafari="mf",t.MicrosoftEdge="ps",t.MicrosoftEdgeIOS="oi",t.OperaMini="om",t.Opera="op",t.OperaNext="on"}(r||(r={})),function(t){t.AmericanExpress="amex",t.Argencard="argencard",t.Cabal="cabal",t.Cencosud="cencosud",t.DinersClub="diners",t.Discover="discover",t.Elo="elo",t.Hipercard="hipercard",t.JCB="jcb",t.Mastercard="mastercard",t.Naranja="naranja",t.TarjetaShopping="targeta-shopping",t.UnionPay="unionpay",t.Visa="visa",t.MIR="mir",t.Maestro="maestro",t.Rupay="rupay"}(a||(a={})),function(t){t.Afghanistan="af",t.Angola="ao",t.Albania="al",t.Andorra="ad",t.UnitedArabEmirates="ae",t.Argentina="ar",t.Armenia="am",t.AntiguaAndBarbuda="ag",t.Australia="au",t.Austria="at",t.Azerbaijan="az",t.Burundi="bi",t.Belgium="be",t.Benin="bj",t.BurkinaFaso="bf",t.Bangladesh="bd",t.Bulgaria="bg",t.Bahrain="bh",t.Bahamas="bs",t.BosniaAndHerzegovina="ba",t.Belarus="by",t.Belize="bz",t.Bolivia="bo",t.Brazil="br",t.Barbados="bb",t.BruneiDarussalam="bn",t.Bhutan="bt",t.Botswana="bw",t.CentralAfricanRepublic="cf",t.Canada="ca",t.Switzerland="ch",t.Chile="cl",t.China="cn",t.CoteDIvoire="ci",t.Cameroon="cm",t.DemocraticRepublicOfTheCongo="cd",t.RepublicOfTheCongo="cg",t.Colombia="co",t.Comoros="km",t.CapeVerde="cv",t.CostaRica="cr",t.Cuba="cu",t.Cyprus="cy",t.CzechRepublic="cz",t.Germany="de",t.Djibouti="dj",t.Dominica="dm",t.Denmark="dk",t.DominicanRepublic="do",t.Algeria="dz",t.Ecuador="ec",t.Egypt="eg",t.Eritrea="er",t.Spain="es",t.Estonia="ee",t.Ethiopia="et",t.Finland="fi",t.Fiji="fj",t.France="fr",t.MicronesiaFederatedStatesOf="fm",t.Gabon="ga",t.UnitedKingdom="gb",t.Georgia="ge",t.Ghana="gh",t.Guinea="gn",t.Gambia="gm",t.GuineaBissau="gw",t.EquatorialGuinea="gq",t.Greece="gr",t.Grenada="gd",t.Guatemala="gt",t.Guyana="gy",t.Honduras="hn",t.Croatia="hr",t.Haiti="ht",t.Hungary="hu",t.Indonesia="id",t.India="in",t.Ireland="ie",t.IranIslamicRepublicOf="ir",t.Iraq="iq",t.Iceland="is",t.Israel="il",t.Italy="it",t.Jamaica="jm",t.Jordan="jo",t.Japan="jp",t.Kazakhstan="kz",t.Kenya="ke",t.Kyrgyzstan="kg",t.Cambodia="kh",t.Kiribati="ki",t.SaintKittsAndNevis="kn",t.SouthKorea="kr",t.Kuwait="kw",t.LaoPeopleSDemocraticRepublic="la",t.Lebanon="lb",t.Liberia="lr",t.Libya="ly",t.SaintLucia="lc",t.Liechtenstein="li",t.SriLanka="lk",t.Lesotho="ls",t.Lithuania="lt",t.Luxembourg="lu",t.Latvia="lv",t.Morocco="ma",t.Monaco="mc",t.Moldova="md",t.Madagascar="mg",t.Maldives="mv",t.Mexico="mx",t.MarshallIslands="mh",t.NorthMacedonia="mk",t.Mali="ml",t.Malta="mt",t.Myanmar="mm",t.Montenegro="me",t.Mongolia="mn",t.Mozambique="mz",t.Mauritania="mr",t.Mauritius="mu",t.Malawi="mw",t.Malaysia="my",t.Namibia="na",t.Niger="ne",t.Nigeria="ng",t.Nicaragua="ni",t.Netherlands="nl",t.Norway="no",t.Nepal="np",t.Nauru="nr",t.NewZealand="nz",t.Oman="om",t.Pakistan="pk",t.Panama="pa",t.Peru="pe",t.Philippines="ph",t.Palau="pw",t.PapuaNewGuinea="pg",t.Poland="pl",t.FrenchPolynesia="pf",t.NorthKorea="kp",t.Portugal="pt",t.Paraguay="py",t.Qatar="qa",t.Romania="ro",t.Russia="ru",t.Rwanda="rw",t.SaudiArabia="sa",t.Sudan="sd",t.Senegal="sn",t.Singapore="sg",t.SolomonIslands="sb",t.SierraLeone="sl",t.ElSalvador="sv",t.SanMarino="sm",t.Somalia="so",t.Serbia="rs",t.SouthSudan="ss",t.SaoTomeAndPrincipe="st",t.Suriname="sr",t.Slovakia="sk",t.Slovenia="si",t.Sweden="se",t.Eswatini="sz",t.Seychelles="sc",t.Syria="sy",t.Chad="td",t.Togo="tg",t.Thailand="th",t.Tajikistan="tj",t.Turkmenistan="tm",t.TimorLeste="tl",t.Tonga="to",t.TrinidadAndTobago="tt",t.Tunisia="tn",t.Turkey="tr",t.Tuvalu="tv",t.Tanzania="tz",t.Uganda="ug",t.Ukraine="ua",t.Uruguay="uy",t.UnitedStates="us",t.Uzbekistan="uz",t.VaticanCity="va",t.SaintVincentAndTheGrenadines="vc",t.Venezuela="ve",t.Vietnam="vn",t.Vanuatu="vu",t.Samoa="ws",t.Yemen="ye",t.SouthAfrica="za",t.Zambia="zm",t.Zimbabwe="zw"}(c||(c={})),function(t){t.GET="GET",t.POST="POST",t.PUT="PUT",t.PATCH="PATCH",t.DELETE="DELETE",t.OPTIONS="OPTIONS",t.HEAD="HEAD"}(d||(d={})),function(t){t.Center="center",t.Topleft="top-left",t.Top="top",t.Topright="top-right",t.Left="left",t.Right="right",t.Bottomleft="bottom-left",t.Bottom="bottom",t.Bottomright="bottom-right"}(p||(p={})),function(t){t.Jpg="jpg",t.Jpeg="jpeg",t.Png="png",t.Webp="webp",t.Heic="heic",t.Avif="avif",t.Gif="gif"}(u||(u={}));export{v as A,w as C,m as D,b as I,l as Q,y as S,h as a};
