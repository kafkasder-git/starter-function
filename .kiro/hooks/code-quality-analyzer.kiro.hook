{
  "enabled": true,
  "name": "Code Quality Analyzer",
  "description": "Monitors source code files for changes and analyzes them for potential improvements including code smells, design patterns, and best practices. Provides actionable suggestions for improving readability, maintainability, and performance while preserving functionality.",
  "version": "1",
  "when": {
    "type": "fileEdited",
    "patterns": [
      "components/**/*.tsx",
      "components/**/*.ts",
      "hooks/**/*.ts",
      "lib/**/*.ts",
      "services/**/*.ts",
      "stores/**/*.ts",
      "types/**/*.ts",
      "utils/**/*.ts",
      "src/**/*.tsx",
      "src/**/*.ts"
    ]
  },
  "then": {
    "type": "askAgent",
    "prompt": "Analyze the modified code files for potential improvements. Focus on:\n\n1. **Code Smells**: Identify long functions, complex conditionals, duplicated code, and unclear naming\n2. **Design Patterns**: Suggest appropriate patterns (hooks, context, composition, etc.) for React/TypeScript\n3. **Best Practices**: Check for proper error handling, type safety, accessibility, and performance considerations\n4. **Maintainability**: Look for opportunities to improve code organization, readability, and documentation\n5. **Performance**: Identify potential optimizations like memoization, lazy loading, or bundle size improvements\n\nFor each issue found, provide:\n- Clear description of the problem\n- Specific code location (file and line if possible)\n- Concrete improvement suggestion with example code when helpful\n- Explanation of why the change improves code quality\n\nFocus on actionable improvements that maintain existing functionality while enhancing code quality."
  }
}